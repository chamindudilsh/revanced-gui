name: Build ReVanced GUI EXE

on:
  push:
    branches: [ main ]
    tags:
      - '*' 
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-exe:
    runs-on: windows-latest

    steps:
    # 1Ô∏è‚É£ Checkout repo
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2Ô∏è‚É£ Setup Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    # 3Ô∏è‚É£ Cache pip packages
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # 4Ô∏è‚É£ Lint Python
    - name: Lint Python
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        flake8 .

    # 5Ô∏è‚É£ Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if (Test-Path "requirements.txt") { pip install -r requirements.txt }
        pip install pyinstaller

    # 6Ô∏è‚É£ Determine version
    - name: Determine version
      id: version
      run: |
        if ($env:GITHUB_REF_NAME -and $env:GITHUB_REF_NAME.StartsWith("v")) {
            $version = $env:GITHUB_REF_NAME.Substring(1)
        } else {
            $version = "latest"
        }
        echo "VERSION=$version" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

    # 7Ô∏è‚É£ Clean old builds
    - name: Clean old builds
      run: |
        Remove-Item -Recurse -Force build, dist, *.spec -ErrorAction SilentlyContinue

    # 8Ô∏è‚É£ Build EXE
    - name: Build EXE
      run: |
        pyinstaller --onefile --icon=assets/icon.ico --name=revanced-gui-${{ env.VERSION }} revanced-gui.py

    # 9Ô∏è‚É£ Upload EXE artifact (for PRs and regular pushes)
    - name: Upload EXE artifact
      uses: actions/upload-artifact@v4
      with:
        name: revanced-gui-exe
        path: dist/revanced-gui-${{ env.VERSION }}.exe

    # üîü Create GitHub Release (only for tags)
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 1Ô∏è‚É£1Ô∏è‚É£ Upload EXE and source .py to Release (only for tags)
    - name: Upload EXE and Source to Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/revanced-gui-${{ env.VERSION }}.exe
          revanced-gui.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
